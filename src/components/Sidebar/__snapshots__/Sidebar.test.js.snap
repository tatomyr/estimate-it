// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    enlargeGraph={[Function]}
    estimates={
        Object {
            "new": Object {
              "_id": "new",
              "calculated": true,
              "graphData": Array [],
              "participants": Array [],
              "project": "",
              "saved": true,
              "text": "",
            },
          }
    }
    graphView="minified"
    location={
        Object {
            "pathname": "/",
          }
    }
    match={
        Object {
            "params": Object {
              "estimateId": "new",
            },
          }
    }
    minifyGraph={[Function]}
    recalc={[Function]}
    saveEstimate={[Function]}
    username="Test User"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(SideButton)
          disabled={true}
          link="/estimate/new"
          name="file"
          title="New"
/>,
        <Connect(SideButton)
          disabled={true}
          name="rocket"
          onClick={[Function]}
          title="Calculate"
/>,
        <Connect(SideButton)
          color="secondary"
          disabled={true}
          name="save"
          onClick={[Function]}
          title="Save"
/>,
        <Connect(SideButton)
          name="bar-chart"
          onClick={[Function]}
          title="Graph"
/>,
        <div
          className="sidebar-padding"
/>,
        <Connect(SideButton)
          link="/dashboard"
          name="list-ul"
          title="Dashboard"
/>,
        <Connect(SideButton)
          color="success"
          link="/auth"
          name="unlock"
          title="Auth"
/>,
        <Connect(SideButton)
          link="/"
          name="home"
          title="Home"
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": true,
          "link": "/estimate/new",
          "name": "file",
          "title": "New",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": true,
          "name": "rocket",
          "onClick": [Function],
          "title": "Calculate",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "color": "secondary",
          "disabled": true,
          "name": "save",
          "onClick": [Function],
          "title": "Save",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "name": "bar-chart",
          "onClick": [Function],
          "title": "Graph",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "sidebar-padding",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/dashboard",
          "name": "list-ul",
          "title": "Dashboard",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "color": "success",
          "link": "/auth",
          "name": "unlock",
          "title": "Auth",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "link": "/",
          "name": "home",
          "title": "Home",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(SideButton)
            disabled={true}
            link="/estimate/new"
            name="file"
            title="New"
/>,
          <Connect(SideButton)
            disabled={true}
            name="rocket"
            onClick={[Function]}
            title="Calculate"
/>,
          <Connect(SideButton)
            color="secondary"
            disabled={true}
            name="save"
            onClick={[Function]}
            title="Save"
/>,
          <Connect(SideButton)
            name="bar-chart"
            onClick={[Function]}
            title="Graph"
/>,
          <div
            className="sidebar-padding"
/>,
          <Connect(SideButton)
            link="/dashboard"
            name="list-ul"
            title="Dashboard"
/>,
          <Connect(SideButton)
            color="success"
            link="/auth"
            name="unlock"
            title="Auth"
/>,
          <Connect(SideButton)
            link="/"
            name="home"
            title="Home"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": true,
            "link": "/estimate/new",
            "name": "file",
            "title": "New",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": true,
            "name": "rocket",
            "onClick": [Function],
            "title": "Calculate",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "color": "secondary",
            "disabled": true,
            "name": "save",
            "onClick": [Function],
            "title": "Save",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "name": "bar-chart",
            "onClick": [Function],
            "title": "Graph",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "sidebar-padding",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/dashboard",
            "name": "list-ul",
            "title": "Dashboard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "color": "success",
            "link": "/auth",
            "name": "unlock",
            "title": "Auth",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "link": "/",
            "name": "home",
            "title": "Home",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
